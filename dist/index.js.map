{"version":3,"file":"index.js","mappings":"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ACL0R,OAAO,EACPE,OAAO,OACPC,YAAY,iCACZC,SAAS,SAET,CACA9R,KAAK,SACL0R,OAAO,EACPE,OAAO,OACPC,YAAY,8BACZC,SAAS,QAET,CACA9R,KAAK,UACL0R,OAAO,EACPE,OAAO,OACPC,YAAY,sBACZC,SAAS,SAET,CACA9R,KAAK,UACL0R,OAAO,EACPE,OAAO,OACPC,YAAY,UACZC,SAAS,QAET,CACA9R,KAAK,SACL0R,OAAO,EACPE,OAAO,OACPC,YAAY,UACZC,SAAS,OAET,CACA9R,KAAK,SACL0R,OAAO,EACPE,OAAO,OACPC,YACA,oEACAC,SAAS,OAET,CACA9R,KAAK,SACL0R,OAAO,EACPE,OAAO,YACPC,YAAY,oDACZC,SAAS,SAET,CACA9R,KAAK,SACL0R,OAAO,EACPE,OAAO,OACPC,YAAY,kCACZC,SAAS,QAET,CACA9R,KAAK,UACL0R,OAAO,EACPE,OAAO,YACPC,YAAY,qBACZC,SAAS,QACTE,QAAO,GAEP,CACAhS,KAAK,UACL0R,OAAO,GACPE,OAAO,YACPC,YAAY,8BACZC,SAAS,SAET,CACA9R,KAAK,UACL0R,OAAO,GACPE,OAAO,OACPC,YAAY,qBACZC,SAAS,QAET,CACA9R,KAAK,UACL0R,OAAO,GACPE,OAAO,YACPC,YAAY,8BACZC,SAAS,SAET,CACA9R,KAAK,UACL0R,OAAO,GACPE,OAAO,YACPC,YAAY,wBACZC,SAAS,SAET,CACA9R,KAAK,UACL0R,OAAO,GACPE,OAAO,YACPC,YAAY,mBACZC,SAAS,SAET,CACA9R,KAAK,UACL0R,OAAO,GACPE,OAAO,YACPC,YAAY,cACZC,SAAS,QAET,CACA9R,KAAK,YACL0R,OAAO,GACPE,OAAO,YACPC,YAAY,+BACZC,SAAS,SAET,CACA9R,KAAK,UACL0R,OAAO,GACPE,OAAO,SACPC,YAAY,+CACZC,SAAS,SAET,CACA9R,KAAK,SACL0R,OAAO,GACPE,OAAO,SACPC,YAAY,+CACZC,SAAS,SAET,CACA9R,KAAK,UACL0R,OAAO,GACPE,OAAO,UACPC,YAAY,WACZC,SAAS,QACTE,QAAO,GAE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","sources":[".././node_modules/cross-spawn/index.js",".././node_modules/cross-spawn/lib/enoent.js",".././node_modules/cross-spawn/lib/parse.js",".././node_modules/cross-spawn/lib/util/escape.js",".././node_modules/cross-spawn/lib/util/readShebang.js",".././node_modules/cross-spawn/lib/util/resolveCommand.js",".././node_modules/get-stream/buffer-stream.js",".././node_modules/get-stream/index.js",".././node_modules/isexe/index.js",".././node_modules/isexe/mode.js",".././node_modules/isexe/windows.js",".././node_modules/merge-stream/index.js",".././node_modules/path-key/index.js",".././node_modules/shebang-command/index.js",".././node_modules/shebang-regex/index.js",".././node_modules/signal-exit/index.js",".././node_modules/signal-exit/signals.js",".././node_modules/which/which.js","../external node-commonjs \"assert\"","../external node-commonjs \"buffer\"","../external node-commonjs \"child_process\"","../external node-commonjs \"events\"","../external node-commonjs \"fs\"","../external node-commonjs \"path\"","../external node-commonjs \"stream\"","../external node-commonjs \"util\"","../webpack/bootstrap","../webpack/runtime/compat get default export","../webpack/runtime/define property getters","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/make namespace object","../external node-commonjs \"process\"","../external node-commonjs \"node:process\"","../external node-commonjs \"node:path\"",".././node_modules/npm-run-path/node_modules/path-key/index.js",".././node_modules/mimic-fn/index.js",".././node_modules/onetime/index.js","../external node-commonjs \"os\"",".././node_modules/human-signals/build/src/realtime.js",".././node_modules/human-signals/build/src/core.js",".././node_modules/human-signals/build/src/signals.js",".././node_modules/human-signals/build/src/main.js",".././lib/error.js",".././lib/stdio.js",".././lib/kill.js",".././node_modules/is-stream/index.js",".././lib/stream.js",".././lib/promise.js",".././lib/command.js",".././index.js",".././node_modules/npm-run-path/index.js",".././node_modules/strip-final-newline/index.js"],"sourcesContent":["'use strict';\n\nconst cp = require('child_process');\nconst parse = require('./lib/parse');\nconst enoent = require('./lib/enoent');\n\nfunction spawn(command, args, options) {\n    // Parse the arguments\n    const parsed = parse(command, args, options);\n\n    // Spawn the child process\n    const spawned = cp.spawn(parsed.command, parsed.args, parsed.options);\n\n    // Hook into child process \"exit\" event to emit an error if the command\n    // does not exists, see: https://github.com/IndigoUnited/node-cross-spawn/issues/16\n    enoent.hookChildProcess(spawned, parsed);\n\n    return spawned;\n}\n\nfunction spawnSync(command, args, options) {\n    // Parse the arguments\n    const parsed = parse(command, args, options);\n\n    // Spawn the child process\n    const result = cp.spawnSync(parsed.command, parsed.args, parsed.options);\n\n    // Analyze if the command does not exist, see: https://github.com/IndigoUnited/node-cross-spawn/issues/16\n    result.error = result.error || enoent.verifyENOENTSync(result.status, parsed);\n\n    return result;\n}\n\nmodule.exports = spawn;\nmodule.exports.spawn = spawn;\nmodule.exports.sync = spawnSync;\n\nmodule.exports._parse = parse;\nmodule.exports._enoent = enoent;\n","'use strict';\n\nconst isWin = process.platform === 'win32';\n\nfunction notFoundError(original, syscall) {\n    return Object.assign(new Error(`${syscall} ${original.command} ENOENT`), {\n        code: 'ENOENT',\n        errno: 'ENOENT',\n        syscall: `${syscall} ${original.command}`,\n        path: original.command,\n        spawnargs: original.args,\n    });\n}\n\nfunction hookChildProcess(cp, parsed) {\n    if (!isWin) {\n        return;\n    }\n\n    const originalEmit = cp.emit;\n\n    cp.emit = function (name, arg1) {\n        // If emitting \"exit\" event and exit code is 1, we need to check if\n        // the command exists and emit an \"error\" instead\n        // See https://github.com/IndigoUnited/node-cross-spawn/issues/16\n        if (name === 'exit') {\n            const err = verifyENOENT(arg1, parsed, 'spawn');\n\n            if (err) {\n                return originalEmit.call(cp, 'error', err);\n            }\n        }\n\n        return originalEmit.apply(cp, arguments); // eslint-disable-line prefer-rest-params\n    };\n}\n\nfunction verifyENOENT(status, parsed) {\n    if (isWin && status === 1 && !parsed.file) {\n        return notFoundError(parsed.original, 'spawn');\n    }\n\n    return null;\n}\n\nfunction verifyENOENTSync(status, parsed) {\n    if (isWin && status === 1 && !parsed.file) {\n        return notFoundError(parsed.original, 'spawnSync');\n    }\n\n    return null;\n}\n\nmodule.exports = {\n    hookChildProcess,\n    verifyENOENT,\n    verifyENOENTSync,\n    notFoundError,\n};\n","'use strict';\n\nconst path = require('path');\nconst resolveCommand = require('./util/resolveCommand');\nconst escape = require('./util/escape');\nconst readShebang = require('./util/readShebang');\n\nconst isWin = process.platform === 'win32';\nconst isExecutableRegExp = /\\.(?:com|exe)$/i;\nconst isCmdShimRegExp = /node_modules[\\\\/].bin[\\\\/][^\\\\/]+\\.cmd$/i;\n\nfunction detectShebang(parsed) {\n    parsed.file = resolveCommand(parsed);\n\n    const shebang = parsed.file && readShebang(parsed.file);\n\n    if (shebang) {\n        parsed.args.unshift(parsed.file);\n        parsed.command = shebang;\n\n        return resolveCommand(parsed);\n    }\n\n    return parsed.file;\n}\n\nfunction parseNonShell(parsed) {\n    if (!isWin) {\n        return parsed;\n    }\n\n    // Detect & add support for shebangs\n    const commandFile = detectShebang(parsed);\n\n    // We don't need a shell if the command filename is an executable\n    const needsShell = !isExecutableRegExp.test(commandFile);\n\n    // If a shell is required, use cmd.exe and take care of escaping everything correctly\n    // Note that `forceShell` is an hidden option used only in tests\n    if (parsed.options.forceShell || needsShell) {\n        // Need to double escape meta chars if the command is a cmd-shim located in `node_modules/.bin/`\n        // The cmd-shim simply calls execute the package bin file with NodeJS, proxying any argument\n        // Because the escape of metachars with ^ gets interpreted when the cmd.exe is first called,\n        // we need to double escape them\n        const needsDoubleEscapeMetaChars = isCmdShimRegExp.test(commandFile);\n\n        // Normalize posix paths into OS compatible paths (e.g.: foo/bar -> foo\\bar)\n        // This is necessary otherwise it will always fail with ENOENT in those cases\n        parsed.command = path.normalize(parsed.command);\n\n        // Escape command & arguments\n        parsed.command = escape.command(parsed.command);\n        parsed.args = parsed.args.map((arg) => escape.argument(arg, needsDoubleEscapeMetaChars));\n\n        const shellCommand = [parsed.command].concat(parsed.args).join(' ');\n\n        parsed.args = ['/d', '/s', '/c', `\"${shellCommand}\"`];\n        parsed.command = process.env.comspec || 'cmd.exe';\n        parsed.options.windowsVerbatimArguments = true; // Tell node's spawn that the arguments are already escaped\n    }\n\n    return parsed;\n}\n\nfunction parse(command, args, options) {\n    // Normalize arguments, similar to nodejs\n    if (args && !Array.isArray(args)) {\n        options = args;\n        args = null;\n    }\n\n    args = args ? args.slice(0) : []; // Clone array to avoid changing the original\n    options = Object.assign({}, options); // Clone object to avoid changing the original\n\n    // Build our parsed object\n    const parsed = {\n        command,\n        args,\n        options,\n        file: undefined,\n        original: {\n            command,\n            args,\n        },\n    };\n\n    // Delegate further parsing to shell or non-shell\n    return options.shell ? parsed : parseNonShell(parsed);\n}\n\nmodule.exports = parse;\n","'use strict';\n\n// See http://www.robvanderwoude.com/escapechars.php\nconst metaCharsRegExp = /([()\\][%!^\"`<>&|;, *?])/g;\n\nfunction escapeCommand(arg) {\n    // Escape meta chars\n    arg = arg.replace(metaCharsRegExp, '^$1');\n\n    return arg;\n}\n\nfunction escapeArgument(arg, doubleEscapeMetaChars) {\n    // Convert to string\n    arg = `${arg}`;\n\n    // Algorithm below is based on https://qntm.org/cmd\n\n    // Sequence of backslashes followed by a double quote:\n    // double up all the backslashes and escape the double quote\n    arg = arg.replace(/(\\\\*)\"/g, '$1$1\\\\\"');\n\n    // Sequence of backslashes followed by the end of the string\n    // (which will become a double quote later):\n    // double up all the backslashes\n    arg = arg.replace(/(\\\\*)$/, '$1$1');\n\n    // All other backslashes occur literally\n\n    // Quote the whole thing:\n    arg = `\"${arg}\"`;\n\n    // Escape meta chars\n    arg = arg.replace(metaCharsRegExp, '^$1');\n\n    // Double escape meta chars if necessary\n    if (doubleEscapeMetaChars) {\n        arg = arg.replace(metaCharsRegExp, '^$1');\n    }\n\n    return arg;\n}\n\nmodule.exports.command = escapeCommand;\nmodule.exports.argument = escapeArgument;\n","'use strict';\n\nconst fs = require('fs');\nconst shebangCommand = require('shebang-command');\n\nfunction readShebang(command) {\n    // Read the first 150 bytes from the file\n    const size = 150;\n    const buffer = Buffer.alloc(size);\n\n    let fd;\n\n    try {\n        fd = fs.openSync(command, 'r');\n        fs.readSync(fd, buffer, 0, size, 0);\n        fs.closeSync(fd);\n    } catch (e) { /* Empty */ }\n\n    // Attempt to extract shebang (null is returned if not a shebang)\n    return shebangCommand(buffer.toString());\n}\n\nmodule.exports = readShebang;\n","'use strict';\n\nconst path = require('path');\nconst which = require('which');\nconst getPathKey = require('path-key');\n\nfunction resolveCommandAttempt(parsed, withoutPathExt) {\n    const env = parsed.options.env || process.env;\n    const cwd = process.cwd();\n    const hasCustomCwd = parsed.options.cwd != null;\n    // Worker threads do not have process.chdir()\n    const shouldSwitchCwd = hasCustomCwd && process.chdir !== undefined && !process.chdir.disabled;\n\n    // If a custom `cwd` was specified, we need to change the process cwd\n    // because `which` will do stat calls but does not support a custom cwd\n    if (shouldSwitchCwd) {\n        try {\n            process.chdir(parsed.options.cwd);\n        } catch (err) {\n            /* Empty */\n        }\n    }\n\n    let resolved;\n\n    try {\n        resolved = which.sync(parsed.command, {\n            path: env[getPathKey({ env })],\n            pathExt: withoutPathExt ? path.delimiter : undefined,\n        });\n    } catch (e) {\n        /* Empty */\n    } finally {\n        if (shouldSwitchCwd) {\n            process.chdir(cwd);\n        }\n    }\n\n    // If we successfully resolved, ensure that an absolute path is returned\n    // Note that when a custom `cwd` was used, we need to resolve to an absolute path based on it\n    if (resolved) {\n        resolved = path.resolve(hasCustomCwd ? parsed.options.cwd : '', resolved);\n    }\n\n    return resolved;\n}\n\nfunction resolveCommand(parsed) {\n    return resolveCommandAttempt(parsed) || resolveCommandAttempt(parsed, true);\n}\n\nmodule.exports = resolveCommand;\n","'use strict';\nconst {PassThrough: PassThroughStream} = require('stream');\n\nmodule.exports = options => {\n\toptions = {...options};\n\n\tconst {array} = options;\n\tlet {encoding} = options;\n\tconst isBuffer = encoding === 'buffer';\n\tlet objectMode = false;\n\n\tif (array) {\n\t\tobjectMode = !(encoding || isBuffer);\n\t} else {\n\t\tencoding = encoding || 'utf8';\n\t}\n\n\tif (isBuffer) {\n\t\tencoding = null;\n\t}\n\n\tconst stream = new PassThroughStream({objectMode});\n\n\tif (encoding) {\n\t\tstream.setEncoding(encoding);\n\t}\n\n\tlet length = 0;\n\tconst chunks = [];\n\n\tstream.on('data', chunk => {\n\t\tchunks.push(chunk);\n\n\t\tif (objectMode) {\n\t\t\tlength = chunks.length;\n\t\t} else {\n\t\t\tlength += chunk.length;\n\t\t}\n\t});\n\n\tstream.getBufferedValue = () => {\n\t\tif (array) {\n\t\t\treturn chunks;\n\t\t}\n\n\t\treturn isBuffer ? Buffer.concat(chunks, length) : chunks.join('');\n\t};\n\n\tstream.getBufferedLength = () => length;\n\n\treturn stream;\n};\n","'use strict';\nconst {constants: BufferConstants} = require('buffer');\nconst stream = require('stream');\nconst {promisify} = require('util');\nconst bufferStream = require('./buffer-stream');\n\nconst streamPipelinePromisified = promisify(stream.pipeline);\n\nclass MaxBufferError extends Error {\n\tconstructor() {\n\t\tsuper('maxBuffer exceeded');\n\t\tthis.name = 'MaxBufferError';\n\t}\n}\n\nasync function getStream(inputStream, options) {\n\tif (!inputStream) {\n\t\tthrow new Error('Expected a stream');\n\t}\n\n\toptions = {\n\t\tmaxBuffer: Infinity,\n\t\t...options\n\t};\n\n\tconst {maxBuffer} = options;\n\tconst stream = bufferStream(options);\n\n\tawait new Promise((resolve, reject) => {\n\t\tconst rejectPromise = error => {\n\t\t\t// Don't retrieve an oversized buffer.\n\t\t\tif (error && stream.getBufferedLength() <= BufferConstants.MAX_LENGTH) {\n\t\t\t\terror.bufferedData = stream.getBufferedValue();\n\t\t\t}\n\n\t\t\treject(error);\n\t\t};\n\n\t\t(async () => {\n\t\t\ttry {\n\t\t\t\tawait streamPipelinePromisified(inputStream, stream);\n\t\t\t\tresolve();\n\t\t\t} catch (error) {\n\t\t\t\trejectPromise(error);\n\t\t\t}\n\t\t})();\n\n\t\tstream.on('data', () => {\n\t\t\tif (stream.getBufferedLength() > maxBuffer) {\n\t\t\t\trejectPromise(new MaxBufferError());\n\t\t\t}\n\t\t});\n\t});\n\n\treturn stream.getBufferedValue();\n}\n\nmodule.exports = getStream;\nmodule.exports.buffer = (stream, options) => getStream(stream, {...options, encoding: 'buffer'});\nmodule.exports.array = (stream, options) => getStream(stream, {...options, array: true});\nmodule.exports.MaxBufferError = MaxBufferError;\n","var fs = require('fs')\nvar core\nif (process.platform === 'win32' || global.TESTING_WINDOWS) {\n  core = require('./windows.js')\n} else {\n  core = require('./mode.js')\n}\n\nmodule.exports = isexe\nisexe.sync = sync\n\nfunction isexe (path, options, cb) {\n  if (typeof options === 'function') {\n    cb = options\n    options = {}\n  }\n\n  if (!cb) {\n    if (typeof Promise !== 'function') {\n      throw new TypeError('callback not provided')\n    }\n\n    return new Promise(function (resolve, reject) {\n      isexe(path, options || {}, function (er, is) {\n        if (er) {\n          reject(er)\n        } else {\n          resolve(is)\n        }\n      })\n    })\n  }\n\n  core(path, options || {}, function (er, is) {\n    // ignore EACCES because that just means we aren't allowed to run it\n    if (er) {\n      if (er.code === 'EACCES' || options && options.ignoreErrors) {\n        er = null\n        is = false\n      }\n    }\n    cb(er, is)\n  })\n}\n\nfunction sync (path, options) {\n  // my kingdom for a filtered catch\n  try {\n    return core.sync(path, options || {})\n  } catch (er) {\n    if (options && options.ignoreErrors || er.code === 'EACCES') {\n      return false\n    } else {\n      throw er\n    }\n  }\n}\n","module.exports = isexe\nisexe.sync = sync\n\nvar fs = require('fs')\n\nfunction isexe (path, options, cb) {\n  fs.stat(path, function (er, stat) {\n    cb(er, er ? false : checkStat(stat, options))\n  })\n}\n\nfunction sync (path, options) {\n  return checkStat(fs.statSync(path), options)\n}\n\nfunction checkStat (stat, options) {\n  return stat.isFile() && checkMode(stat, options)\n}\n\nfunction checkMode (stat, options) {\n  var mod = stat.mode\n  var uid = stat.uid\n  var gid = stat.gid\n\n  var myUid = options.uid !== undefined ?\n    options.uid : process.getuid && process.getuid()\n  var myGid = options.gid !== undefined ?\n    options.gid : process.getgid && process.getgid()\n\n  var u = parseInt('100', 8)\n  var g = parseInt('010', 8)\n  var o = parseInt('001', 8)\n  var ug = u | g\n\n  var ret = (mod & o) ||\n    (mod & g) && gid === myGid ||\n    (mod & u) && uid === myUid ||\n    (mod & ug) && myUid === 0\n\n  return ret\n}\n","module.exports = isexe\nisexe.sync = sync\n\nvar fs = require('fs')\n\nfunction checkPathExt (path, options) {\n  var pathext = options.pathExt !== undefined ?\n    options.pathExt : process.env.PATHEXT\n\n  if (!pathext) {\n    return true\n  }\n\n  pathext = pathext.split(';')\n  if (pathext.indexOf('') !== -1) {\n    return true\n  }\n  for (var i = 0; i < pathext.length; i++) {\n    var p = pathext[i].toLowerCase()\n    if (p && path.substr(-p.length).toLowerCase() === p) {\n      return true\n    }\n  }\n  return false\n}\n\nfunction checkStat (stat, path, options) {\n  if (!stat.isSymbolicLink() && !stat.isFile()) {\n    return false\n  }\n  return checkPathExt(path, options)\n}\n\nfunction isexe (path, options, cb) {\n  fs.stat(path, function (er, stat) {\n    cb(er, er ? false : checkStat(stat, path, options))\n  })\n}\n\nfunction sync (path, options) {\n  return checkStat(fs.statSync(path), path, options)\n}\n","'use strict';\n\nconst { PassThrough } = require('stream');\n\nmodule.exports = function (/*streams...*/) {\n  var sources = []\n  var output  = new PassThrough({objectMode: true})\n\n  output.setMaxListeners(0)\n\n  output.add = add\n  output.isEmpty = isEmpty\n\n  output.on('unpipe', remove)\n\n  Array.prototype.slice.call(arguments).forEach(add)\n\n  return output\n\n  function add (source) {\n    if (Array.isArray(source)) {\n      source.forEach(add)\n      return this\n    }\n\n    sources.push(source);\n    source.once('end', remove.bind(null, source))\n    source.once('error', output.emit.bind(output, 'error'))\n    source.pipe(output, {end: false})\n    return this\n  }\n\n  function isEmpty () {\n    return sources.length == 0;\n  }\n\n  function remove (source) {\n    sources = sources.filter(function (it) { return it !== source })\n    if (!sources.length && output.readable) { output.end() }\n  }\n}\n","'use strict';\n\nconst pathKey = (options = {}) => {\n\tconst environment = options.env || process.env;\n\tconst platform = options.platform || process.platform;\n\n\tif (platform !== 'win32') {\n\t\treturn 'PATH';\n\t}\n\n\treturn Object.keys(environment).reverse().find(key => key.toUpperCase() === 'PATH') || 'Path';\n};\n\nmodule.exports = pathKey;\n// TODO: Remove this for the next major release\nmodule.exports.default = pathKey;\n","'use strict';\nconst shebangRegex = require('shebang-regex');\n\nmodule.exports = (string = '') => {\n\tconst match = string.match(shebangRegex);\n\n\tif (!match) {\n\t\treturn null;\n\t}\n\n\tconst [path, argument] = match[0].replace(/#! ?/, '').split(' ');\n\tconst binary = path.split('/').pop();\n\n\tif (binary === 'env') {\n\t\treturn argument;\n\t}\n\n\treturn argument ? `${binary} ${argument}` : binary;\n};\n","'use strict';\nmodule.exports = /^#!(.*)/;\n","// Note: since nyc uses this module to output coverage, any lines\n// that are in the direct sync flow of nyc's outputCoverage are\n// ignored, since we can never get coverage for them.\n// grab a reference to node's real process object right away\nvar process = global.process\n\nconst processOk = function (process) {\n  return process &&\n    typeof process === 'object' &&\n    typeof process.removeListener === 'function' &&\n    typeof process.emit === 'function' &&\n    typeof process.reallyExit === 'function' &&\n    typeof process.listeners === 'function' &&\n    typeof process.kill === 'function' &&\n    typeof process.pid === 'number' &&\n    typeof process.on === 'function'\n}\n\n// some kind of non-node environment, just no-op\n/* istanbul ignore if */\nif (!processOk(process)) {\n  module.exports = function () {}\n} else {\n  var assert = require('assert')\n  var signals = require('./signals.js')\n  var isWin = /^win/i.test(process.platform)\n\n  var EE = require('events')\n  /* istanbul ignore if */\n  if (typeof EE !== 'function') {\n    EE = EE.EventEmitter\n  }\n\n  var emitter\n  if (process.__signal_exit_emitter__) {\n    emitter = process.__signal_exit_emitter__\n  } else {\n    emitter = process.__signal_exit_emitter__ = new EE()\n    emitter.count = 0\n    emitter.emitted = {}\n  }\n\n  // Because this emitter is a global, we have to check to see if a\n  // previous version of this library failed to enable infinite listeners.\n  // I know what you're about to say.  But literally everything about\n  // signal-exit is a compromise with evil.  Get used to it.\n  if (!emitter.infinite) {\n    emitter.setMaxListeners(Infinity)\n    emitter.infinite = true\n  }\n\n  module.exports = function (cb, opts) {\n    /* istanbul ignore if */\n    if (!processOk(global.process)) {\n      return\n    }\n    assert.equal(typeof cb, 'function', 'a callback must be provided for exit handler')\n\n    if (loaded === false) {\n      load()\n    }\n\n    var ev = 'exit'\n    if (opts && opts.alwaysLast) {\n      ev = 'afterexit'\n    }\n\n    var remove = function () {\n      emitter.removeListener(ev, cb)\n      if (emitter.listeners('exit').length === 0 &&\n          emitter.listeners('afterexit').length === 0) {\n        unload()\n      }\n    }\n    emitter.on(ev, cb)\n\n    return remove\n  }\n\n  var unload = function unload () {\n    if (!loaded || !processOk(global.process)) {\n      return\n    }\n    loaded = false\n\n    signals.forEach(function (sig) {\n      try {\n        process.removeListener(sig, sigListeners[sig])\n      } catch (er) {}\n    })\n    process.emit = originalProcessEmit\n    process.reallyExit = originalProcessReallyExit\n    emitter.count -= 1\n  }\n  module.exports.unload = unload\n\n  var emit = function emit (event, code, signal) {\n    /* istanbul ignore if */\n    if (emitter.emitted[event]) {\n      return\n    }\n    emitter.emitted[event] = true\n    emitter.emit(event, code, signal)\n  }\n\n  // { <signal>: <listener fn>, ... }\n  var sigListeners = {}\n  signals.forEach(function (sig) {\n    sigListeners[sig] = function listener () {\n      /* istanbul ignore if */\n      if (!processOk(global.process)) {\n        return\n      }\n      // If there are no other listeners, an exit is coming!\n      // Simplest way: remove us and then re-send the signal.\n      // We know that this will kill the process, so we can\n      // safely emit now.\n      var listeners = process.listeners(sig)\n      if (listeners.length === emitter.count) {\n        unload()\n        emit('exit', null, sig)\n        /* istanbul ignore next */\n        emit('afterexit', null, sig)\n        /* istanbul ignore next */\n        if (isWin && sig === 'SIGHUP') {\n          // \"SIGHUP\" throws an `ENOSYS` error on Windows,\n          // so use a supported signal instead\n          sig = 'SIGINT'\n        }\n        /* istanbul ignore next */\n        process.kill(process.pid, sig)\n      }\n    }\n  })\n\n  module.exports.signals = function () {\n    return signals\n  }\n\n  var loaded = false\n\n  var load = function load () {\n    if (loaded || !processOk(global.process)) {\n      return\n    }\n    loaded = true\n\n    // This is the number of onSignalExit's that are in play.\n    // It's important so that we can count the correct number of\n    // listeners on signals, and don't wait for the other one to\n    // handle it instead of us.\n    emitter.count += 1\n\n    signals = signals.filter(function (sig) {\n      try {\n        process.on(sig, sigListeners[sig])\n        return true\n      } catch (er) {\n        return false\n      }\n    })\n\n    process.emit = processEmit\n    process.reallyExit = processReallyExit\n  }\n  module.exports.load = load\n\n  var originalProcessReallyExit = process.reallyExit\n  var processReallyExit = function processReallyExit (code) {\n    /* istanbul ignore if */\n    if (!processOk(global.process)) {\n      return\n    }\n    process.exitCode = code || /* istanbul ignore next */ 0\n    emit('exit', process.exitCode, null)\n    /* istanbul ignore next */\n    emit('afterexit', process.exitCode, null)\n    /* istanbul ignore next */\n    originalProcessReallyExit.call(process, process.exitCode)\n  }\n\n  var originalProcessEmit = process.emit\n  var processEmit = function processEmit (ev, arg) {\n    if (ev === 'exit' && processOk(global.process)) {\n      /* istanbul ignore else */\n      if (arg !== undefined) {\n        process.exitCode = arg\n      }\n      var ret = originalProcessEmit.apply(this, arguments)\n      /* istanbul ignore next */\n      emit('exit', process.exitCode, null)\n      /* istanbul ignore next */\n      emit('afterexit', process.exitCode, null)\n      /* istanbul ignore next */\n      return ret\n    } else {\n      return originalProcessEmit.apply(this, arguments)\n    }\n  }\n}\n","// This is not the set of all possible signals.\n//\n// It IS, however, the set of all signals that trigger\n// an exit on either Linux or BSD systems.  Linux is a\n// superset of the signal names supported on BSD, and\n// the unknown signals just fail to register, so we can\n// catch that easily enough.\n//\n// Don't bother with SIGKILL.  It's uncatchable, which\n// means that we can't fire any callbacks anyway.\n//\n// If a user does happen to register a handler on a non-\n// fatal signal like SIGWINCH or something, and then\n// exit, it'll end up firing `process.emit('exit')`, so\n// the handler will be fired anyway.\n//\n// SIGBUS, SIGFPE, SIGSEGV and SIGILL, when not raised\n// artificially, inherently leave the process in a\n// state from which it is not safe to try and enter JS\n// listeners.\nmodule.exports = [\n  'SIGABRT',\n  'SIGALRM',\n  'SIGHUP',\n  'SIGINT',\n  'SIGTERM'\n]\n\nif (process.platform !== 'win32') {\n  module.exports.push(\n    'SIGVTALRM',\n    'SIGXCPU',\n    'SIGXFSZ',\n    'SIGUSR2',\n    'SIGTRAP',\n    'SIGSYS',\n    'SIGQUIT',\n    'SIGIOT'\n    // should detect profiler and enable/disable accordingly.\n    // see #21\n    // 'SIGPROF'\n  )\n}\n\nif (process.platform === 'linux') {\n  module.exports.push(\n    'SIGIO',\n    'SIGPOLL',\n    'SIGPWR',\n    'SIGSTKFLT',\n    'SIGUNUSED'\n  )\n}\n","const isWindows = process.platform === 'win32' ||\n    process.env.OSTYPE === 'cygwin' ||\n    process.env.OSTYPE === 'msys'\n\nconst path = require('path')\nconst COLON = isWindows ? ';' : ':'\nconst isexe = require('isexe')\n\nconst getNotFoundError = (cmd) =>\n  Object.assign(new Error(`not found: ${cmd}`), { code: 'ENOENT' })\n\nconst getPathInfo = (cmd, opt) => {\n  const colon = opt.colon || COLON\n\n  // If it has a slash, then we don't bother searching the pathenv.\n  // just check the file itself, and that's it.\n  const pathEnv = cmd.match(/\\//) || isWindows && cmd.match(/\\\\/) ? ['']\n    : (\n      [\n        // windows always checks the cwd first\n        ...(isWindows ? [process.cwd()] : []),\n        ...(opt.path || process.env.PATH ||\n          /* istanbul ignore next: very unusual */ '').split(colon),\n      ]\n    )\n  const pathExtExe = isWindows\n    ? opt.pathExt || process.env.PATHEXT || '.EXE;.CMD;.BAT;.COM'\n    : ''\n  const pathExt = isWindows ? pathExtExe.split(colon) : ['']\n\n  if (isWindows) {\n    if (cmd.indexOf('.') !== -1 && pathExt[0] !== '')\n      pathExt.unshift('')\n  }\n\n  return {\n    pathEnv,\n    pathExt,\n    pathExtExe,\n  }\n}\n\nconst which = (cmd, opt, cb) => {\n  if (typeof opt === 'function') {\n    cb = opt\n    opt = {}\n  }\n  if (!opt)\n    opt = {}\n\n  const { pathEnv, pathExt, pathExtExe } = getPathInfo(cmd, opt)\n  const found = []\n\n  const step = i => new Promise((resolve, reject) => {\n    if (i === pathEnv.length)\n      return opt.all && found.length ? resolve(found)\n        : reject(getNotFoundError(cmd))\n\n    const ppRaw = pathEnv[i]\n    const pathPart = /^\".*\"$/.test(ppRaw) ? ppRaw.slice(1, -1) : ppRaw\n\n    const pCmd = path.join(pathPart, cmd)\n    const p = !pathPart && /^\\.[\\\\\\/]/.test(cmd) ? cmd.slice(0, 2) + pCmd\n      : pCmd\n\n    resolve(subStep(p, i, 0))\n  })\n\n  const subStep = (p, i, ii) => new Promise((resolve, reject) => {\n    if (ii === pathExt.length)\n      return resolve(step(i + 1))\n    const ext = pathExt[ii]\n    isexe(p + ext, { pathExt: pathExtExe }, (er, is) => {\n      if (!er && is) {\n        if (opt.all)\n          found.push(p + ext)\n        else\n          return resolve(p + ext)\n      }\n      return resolve(subStep(p, i, ii + 1))\n    })\n  })\n\n  return cb ? step(0).then(res => cb(null, res), cb) : step(0)\n}\n\nconst whichSync = (cmd, opt) => {\n  opt = opt || {}\n\n  const { pathEnv, pathExt, pathExtExe } = getPathInfo(cmd, opt)\n  const found = []\n\n  for (let i = 0; i < pathEnv.length; i ++) {\n    const ppRaw = pathEnv[i]\n    const pathPart = /^\".*\"$/.test(ppRaw) ? ppRaw.slice(1, -1) : ppRaw\n\n    const pCmd = path.join(pathPart, cmd)\n    const p = !pathPart && /^\\.[\\\\\\/]/.test(cmd) ? cmd.slice(0, 2) + pCmd\n      : pCmd\n\n    for (let j = 0; j < pathExt.length; j ++) {\n      const cur = p + pathExt[j]\n      try {\n        const is = isexe.sync(cur, { pathExt: pathExtExe })\n        if (is) {\n          if (opt.all)\n            found.push(cur)\n          else\n            return cur\n        }\n      } catch (ex) {}\n    }\n  }\n\n  if (opt.all && found.length)\n    return found\n\n  if (opt.nothrow)\n    return null\n\n  throw getNotFoundError(cmd)\n}\n\nmodule.exports = which\nwhich.sync = whichSync\n","module.exports = require(\"assert\");","module.exports = require(\"buffer\");","module.exports = require(\"child_process\");","module.exports = require(\"events\");","module.exports = require(\"fs\");","module.exports = require(\"path\");","module.exports = require(\"stream\");","module.exports = require(\"util\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"process\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"node:process\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"node:path\");","export default function pathKey(options = {}) {\n\tconst {\n\t\tenv = process.env,\n\t\tplatform = process.platform\n\t} = options;\n\n\tif (platform !== 'win32') {\n\t\treturn 'PATH';\n\t}\n\n\treturn Object.keys(env).reverse().find(key => key.toUpperCase() === 'PATH') || 'Path';\n}\n","const copyProperty = (to, from, property, ignoreNonConfigurable) => {\n\t// `Function#length` should reflect the parameters of `to` not `from` since we keep its body.\n\t// `Function#prototype` is non-writable and non-configurable so can never be modified.\n\tif (property === 'length' || property === 'prototype') {\n\t\treturn;\n\t}\n\n\t// `Function#arguments` and `Function#caller` should not be copied. They were reported to be present in `Reflect.ownKeys` for some devices in React Native (#41), so we explicitly ignore them here.\n\tif (property === 'arguments' || property === 'caller') {\n\t\treturn;\n\t}\n\n\tconst toDescriptor = Object.getOwnPropertyDescriptor(to, property);\n\tconst fromDescriptor = Object.getOwnPropertyDescriptor(from, property);\n\n\tif (!canCopyProperty(toDescriptor, fromDescriptor) && ignoreNonConfigurable) {\n\t\treturn;\n\t}\n\n\tObject.defineProperty(to, property, fromDescriptor);\n};\n\n// `Object.defineProperty()` throws if the property exists, is not configurable and either:\n// - one its descriptors is changed\n// - it is non-writable and its value is changed\nconst canCopyProperty = function (toDescriptor, fromDescriptor) {\n\treturn toDescriptor === undefined || toDescriptor.configurable || (\n\t\ttoDescriptor.writable === fromDescriptor.writable &&\n\t\ttoDescriptor.enumerable === fromDescriptor.enumerable &&\n\t\ttoDescriptor.configurable === fromDescriptor.configurable &&\n\t\t(toDescriptor.writable || toDescriptor.value === fromDescriptor.value)\n\t);\n};\n\nconst changePrototype = (to, from) => {\n\tconst fromPrototype = Object.getPrototypeOf(from);\n\tif (fromPrototype === Object.getPrototypeOf(to)) {\n\t\treturn;\n\t}\n\n\tObject.setPrototypeOf(to, fromPrototype);\n};\n\nconst wrappedToString = (withName, fromBody) => `/* Wrapped ${withName}*/\\n${fromBody}`;\n\nconst toStringDescriptor = Object.getOwnPropertyDescriptor(Function.prototype, 'toString');\nconst toStringName = Object.getOwnPropertyDescriptor(Function.prototype.toString, 'name');\n\n// We call `from.toString()` early (not lazily) to ensure `from` can be garbage collected.\n// We use `bind()` instead of a closure for the same reason.\n// Calling `from.toString()` early also allows caching it in case `to.toString()` is called several times.\nconst changeToString = (to, from, name) => {\n\tconst withName = name === '' ? '' : `with ${name.trim()}() `;\n\tconst newToString = wrappedToString.bind(null, withName, from.toString());\n\t// Ensure `to.toString.toString` is non-enumerable and has the same `same`\n\tObject.defineProperty(newToString, 'name', toStringName);\n\tObject.defineProperty(to, 'toString', {...toStringDescriptor, value: newToString});\n};\n\nexport default function mimicFunction(to, from, {ignoreNonConfigurable = false} = {}) {\n\tconst {name} = to;\n\n\tfor (const property of Reflect.ownKeys(from)) {\n\t\tcopyProperty(to, from, property, ignoreNonConfigurable);\n\t}\n\n\tchangePrototype(to, from);\n\tchangeToString(to, from, name);\n\n\treturn to;\n}\n","import mimicFunction from 'mimic-fn';\n\nconst calledFunctions = new WeakMap();\n\nconst onetime = (function_, options = {}) => {\n\tif (typeof function_ !== 'function') {\n\t\tthrow new TypeError('Expected a function');\n\t}\n\n\tlet returnValue;\n\tlet callCount = 0;\n\tconst functionName = function_.displayName || function_.name || '<anonymous>';\n\n\tconst onetime = function (...arguments_) {\n\t\tcalledFunctions.set(onetime, ++callCount);\n\n\t\tif (callCount === 1) {\n\t\t\treturnValue = function_.apply(this, arguments_);\n\t\t\tfunction_ = null;\n\t\t} else if (options.throw === true) {\n\t\t\tthrow new Error(`Function \\`${functionName}\\` can only be called once`);\n\t\t}\n\n\t\treturn returnValue;\n\t};\n\n\tmimicFunction(onetime, function_);\n\tcalledFunctions.set(onetime, callCount);\n\n\treturn onetime;\n};\n\nonetime.callCount = function_ => {\n\tif (!calledFunctions.has(function_)) {\n\t\tthrow new Error(`The given function \\`${function_.name}\\` is not wrapped by the \\`onetime\\` package`);\n\t}\n\n\treturn calledFunctions.get(function_);\n};\n\nexport default onetime;\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"os\");","\nexport const getRealtimeSignals=function(){\nconst length=SIGRTMAX-SIGRTMIN+1;\nreturn Array.from({length},getRealtimeSignal);\n};\n\nconst getRealtimeSignal=function(value,index){\nreturn{\nname:`SIGRT${index+1}`,\nnumber:SIGRTMIN+index,\naction:\"terminate\",\ndescription:\"Application-specific signal (realtime)\",\nstandard:\"posix\"};\n\n};\n\nconst SIGRTMIN=34;\nexport const SIGRTMAX=64;\n//# sourceMappingURL=realtime.js.map","\n\nexport const SIGNALS=[\n{\nname:\"SIGHUP\",\nnumber:1,\naction:\"terminate\",\ndescription:\"Terminal closed\",\nstandard:\"posix\"},\n\n{\nname:\"SIGINT\",\nnumber:2,\naction:\"terminate\",\ndescription:\"User interruption with CTRL-C\",\nstandard:\"ansi\"},\n\n{\nname:\"SIGQUIT\",\nnumber:3,\naction:\"core\",\ndescription:\"User interruption with CTRL-\\\\\",\nstandard:\"posix\"},\n\n{\nname:\"SIGILL\",\nnumber:4,\naction:\"core\",\ndescription:\"Invalid machine instruction\",\nstandard:\"ansi\"},\n\n{\nname:\"SIGTRAP\",\nnumber:5,\naction:\"core\",\ndescription:\"Debugger breakpoint\",\nstandard:\"posix\"},\n\n{\nname:\"SIGABRT\",\nnumber:6,\naction:\"core\",\ndescription:\"Aborted\",\nstandard:\"ansi\"},\n\n{\nname:\"SIGIOT\",\nnumber:6,\naction:\"core\",\ndescription:\"Aborted\",\nstandard:\"bsd\"},\n\n{\nname:\"SIGBUS\",\nnumber:7,\naction:\"core\",\ndescription:\n\"Bus error due to misaligned, non-existing address or paging error\",\nstandard:\"bsd\"},\n\n{\nname:\"SIGEMT\",\nnumber:7,\naction:\"terminate\",\ndescription:\"Command should be emulated but is not implemented\",\nstandard:\"other\"},\n\n{\nname:\"SIGFPE\",\nnumber:8,\naction:\"core\",\ndescription:\"Floating point arithmetic error\",\nstandard:\"ansi\"},\n\n{\nname:\"SIGKILL\",\nnumber:9,\naction:\"terminate\",\ndescription:\"Forced termination\",\nstandard:\"posix\",\nforced:true},\n\n{\nname:\"SIGUSR1\",\nnumber:10,\naction:\"terminate\",\ndescription:\"Application-specific signal\",\nstandard:\"posix\"},\n\n{\nname:\"SIGSEGV\",\nnumber:11,\naction:\"core\",\ndescription:\"Segmentation fault\",\nstandard:\"ansi\"},\n\n{\nname:\"SIGUSR2\",\nnumber:12,\naction:\"terminate\",\ndescription:\"Application-specific signal\",\nstandard:\"posix\"},\n\n{\nname:\"SIGPIPE\",\nnumber:13,\naction:\"terminate\",\ndescription:\"Broken pipe or socket\",\nstandard:\"posix\"},\n\n{\nname:\"SIGALRM\",\nnumber:14,\naction:\"terminate\",\ndescription:\"Timeout or timer\",\nstandard:\"posix\"},\n\n{\nname:\"SIGTERM\",\nnumber:15,\naction:\"terminate\",\ndescription:\"Termination\",\nstandard:\"ansi\"},\n\n{\nname:\"SIGSTKFLT\",\nnumber:16,\naction:\"terminate\",\ndescription:\"Stack is empty or overflowed\",\nstandard:\"other\"},\n\n{\nname:\"SIGCHLD\",\nnumber:17,\naction:\"ignore\",\ndescription:\"Child process terminated, paused or unpaused\",\nstandard:\"posix\"},\n\n{\nname:\"SIGCLD\",\nnumber:17,\naction:\"ignore\",\ndescription:\"Child process terminated, paused or unpaused\",\nstandard:\"other\"},\n\n{\nname:\"SIGCONT\",\nnumber:18,\naction:\"unpause\",\ndescription:\"Unpaused\",\nstandard:\"posix\",\nforced:true},\n\n{\nname:\"SIGSTOP\",\nnumber:19,\naction:\"pause\",\ndescription:\"Paused\",\nstandard:\"posix\",\nforced:true},\n\n{\nname:\"SIGTSTP\",\nnumber:20,\naction:\"pause\",\ndescription:\"Paused using CTRL-Z or \\\"suspend\\\"\",\nstandard:\"posix\"},\n\n{\nname:\"SIGTTIN\",\nnumber:21,\naction:\"pause\",\ndescription:\"Background process cannot read terminal input\",\nstandard:\"posix\"},\n\n{\nname:\"SIGBREAK\",\nnumber:21,\naction:\"terminate\",\ndescription:\"User interruption with CTRL-BREAK\",\nstandard:\"other\"},\n\n{\nname:\"SIGTTOU\",\nnumber:22,\naction:\"pause\",\ndescription:\"Background process cannot write to terminal output\",\nstandard:\"posix\"},\n\n{\nname:\"SIGURG\",\nnumber:23,\naction:\"ignore\",\ndescription:\"Socket received out-of-band data\",\nstandard:\"bsd\"},\n\n{\nname:\"SIGXCPU\",\nnumber:24,\naction:\"core\",\ndescription:\"Process timed out\",\nstandard:\"bsd\"},\n\n{\nname:\"SIGXFSZ\",\nnumber:25,\naction:\"core\",\ndescription:\"File too big\",\nstandard:\"bsd\"},\n\n{\nname:\"SIGVTALRM\",\nnumber:26,\naction:\"terminate\",\ndescription:\"Timeout or timer\",\nstandard:\"bsd\"},\n\n{\nname:\"SIGPROF\",\nnumber:27,\naction:\"terminate\",\ndescription:\"Timeout or timer\",\nstandard:\"bsd\"},\n\n{\nname:\"SIGWINCH\",\nnumber:28,\naction:\"ignore\",\ndescription:\"Terminal window size changed\",\nstandard:\"bsd\"},\n\n{\nname:\"SIGIO\",\nnumber:29,\naction:\"terminate\",\ndescription:\"I/O is available\",\nstandard:\"other\"},\n\n{\nname:\"SIGPOLL\",\nnumber:29,\naction:\"terminate\",\ndescription:\"Watched event\",\nstandard:\"other\"},\n\n{\nname:\"SIGINFO\",\nnumber:29,\naction:\"ignore\",\ndescription:\"Request for process information\",\nstandard:\"other\"},\n\n{\nname:\"SIGPWR\",\nnumber:30,\naction:\"terminate\",\ndescription:\"Device running out of power\",\nstandard:\"systemv\"},\n\n{\nname:\"SIGSYS\",\nnumber:31,\naction:\"core\",\ndescription:\"Invalid system call\",\nstandard:\"other\"},\n\n{\nname:\"SIGUNUSED\",\nnumber:31,\naction:\"terminate\",\ndescription:\"Invalid system call\",\nstandard:\"other\"}];\n//# sourceMappingURL=core.js.map","import{constants}from\"os\";\n\nimport{SIGNALS}from\"./core.js\";\nimport{getRealtimeSignals}from\"./realtime.js\";\n\n\n\nexport const getSignals=function(){\nconst realtimeSignals=getRealtimeSignals();\nconst signals=[...SIGNALS,...realtimeSignals].map(normalizeSignal);\nreturn signals;\n};\n\n\n\n\n\n\n\nconst normalizeSignal=function({\nname,\nnumber:defaultNumber,\ndescription,\naction,\nforced=false,\nstandard})\n{\nconst{\nsignals:{[name]:constantSignal}}=\nconstants;\nconst supported=constantSignal!==undefined;\nconst number=supported?constantSignal:defaultNumber;\nreturn{name,number,description,supported,action,forced,standard};\n};\n//# sourceMappingURL=signals.js.map","import{constants}from\"os\";\n\nimport{SIGRTMAX}from\"./realtime.js\";\nimport{getSignals}from\"./signals.js\";\n\n\n\nconst getSignalsByName=function(){\nconst signals=getSignals();\nreturn signals.reduce(getSignalByName,{});\n};\n\nconst getSignalByName=function(\nsignalByNameMemo,\n{name,number,description,supported,action,forced,standard})\n{\nreturn{\n...signalByNameMemo,\n[name]:{name,number,description,supported,action,forced,standard}};\n\n};\n\nexport const signalsByName=getSignalsByName();\n\n\n\n\nconst getSignalsByNumber=function(){\nconst signals=getSignals();\nconst length=SIGRTMAX+1;\nconst signalsA=Array.from({length},(value,number)=>\ngetSignalByNumber(number,signals));\n\nreturn Object.assign({},...signalsA);\n};\n\nconst getSignalByNumber=function(number,signals){\nconst signal=findSignalByNumber(number,signals);\n\nif(signal===undefined){\nreturn{};\n}\n\nconst{name,description,supported,action,forced,standard}=signal;\nreturn{\n[number]:{\nname,\nnumber,\ndescription,\nsupported,\naction,\nforced,\nstandard}};\n\n\n};\n\n\n\nconst findSignalByNumber=function(number,signals){\nconst signal=signals.find(({name})=>constants.signals[name]===number);\n\nif(signal!==undefined){\nreturn signal;\n}\n\nreturn signals.find((signalA)=>signalA.number===number);\n};\n\nexport const signalsByNumber=getSignalsByNumber();\n//# sourceMappingURL=main.js.map","import {signalsByName} from 'human-signals';\n\nconst getErrorPrefix = ({timedOut, timeout, errorCode, signal, signalDescription, exitCode, isCanceled}) => {\n\tif (timedOut) {\n\t\treturn `timed out after ${timeout} milliseconds`;\n\t}\n\n\tif (isCanceled) {\n\t\treturn 'was canceled';\n\t}\n\n\tif (errorCode !== undefined) {\n\t\treturn `failed with ${errorCode}`;\n\t}\n\n\tif (signal !== undefined) {\n\t\treturn `was killed with ${signal} (${signalDescription})`;\n\t}\n\n\tif (exitCode !== undefined) {\n\t\treturn `failed with exit code ${exitCode}`;\n\t}\n\n\treturn 'failed';\n};\n\nexport const makeError = ({\n\tstdout,\n\tstderr,\n\tall,\n\terror,\n\tsignal,\n\texitCode,\n\tcommand,\n\tescapedCommand,\n\ttimedOut,\n\tisCanceled,\n\tkilled,\n\tparsed: {options: {timeout}},\n}) => {\n\t// `signal` and `exitCode` emitted on `spawned.on('exit')` event can be `null`.\n\t// We normalize them to `undefined`\n\texitCode = exitCode === null ? undefined : exitCode;\n\tsignal = signal === null ? undefined : signal;\n\tconst signalDescription = signal === undefined ? undefined : signalsByName[signal].description;\n\n\tconst errorCode = error && error.code;\n\n\tconst prefix = getErrorPrefix({timedOut, timeout, errorCode, signal, signalDescription, exitCode, isCanceled});\n\tconst execaMessage = `Command ${prefix}: ${command}`;\n\tconst isError = Object.prototype.toString.call(error) === '[object Error]';\n\tconst shortMessage = isError ? `${execaMessage}\\n${error.message}` : execaMessage;\n\tconst message = [shortMessage, stderr, stdout].filter(Boolean).join('\\n');\n\n\tif (isError) {\n\t\terror.originalMessage = error.message;\n\t\terror.message = message;\n\t} else {\n\t\terror = new Error(message);\n\t}\n\n\terror.shortMessage = shortMessage;\n\terror.command = command;\n\terror.escapedCommand = escapedCommand;\n\terror.exitCode = exitCode;\n\terror.signal = signal;\n\terror.signalDescription = signalDescription;\n\terror.stdout = stdout;\n\terror.stderr = stderr;\n\n\tif (all !== undefined) {\n\t\terror.all = all;\n\t}\n\n\tif ('bufferedData' in error) {\n\t\tdelete error.bufferedData;\n\t}\n\n\terror.failed = true;\n\terror.timedOut = Boolean(timedOut);\n\terror.isCanceled = isCanceled;\n\terror.killed = killed && !timedOut;\n\n\treturn error;\n};\n","const aliases = ['stdin', 'stdout', 'stderr'];\n\nconst hasAlias = options => aliases.some(alias => options[alias] !== undefined);\n\nexport const normalizeStdio = options => {\n\tif (!options) {\n\t\treturn;\n\t}\n\n\tconst {stdio} = options;\n\n\tif (stdio === undefined) {\n\t\treturn aliases.map(alias => options[alias]);\n\t}\n\n\tif (hasAlias(options)) {\n\t\tthrow new Error(`It's not possible to provide \\`stdio\\` in combination with one of ${aliases.map(alias => `\\`${alias}\\``).join(', ')}`);\n\t}\n\n\tif (typeof stdio === 'string') {\n\t\treturn stdio;\n\t}\n\n\tif (!Array.isArray(stdio)) {\n\t\tthrow new TypeError(`Expected \\`stdio\\` to be of type \\`string\\` or \\`Array\\`, got \\`${typeof stdio}\\``);\n\t}\n\n\tconst length = Math.max(stdio.length, aliases.length);\n\treturn Array.from({length}, (value, index) => stdio[index]);\n};\n\n// `ipc` is pushed unless it is already present\nexport const normalizeStdioNode = options => {\n\tconst stdio = normalizeStdio(options);\n\n\tif (stdio === 'ipc') {\n\t\treturn 'ipc';\n\t}\n\n\tif (stdio === undefined || typeof stdio === 'string') {\n\t\treturn [stdio, stdio, stdio, 'ipc'];\n\t}\n\n\tif (stdio.includes('ipc')) {\n\t\treturn stdio;\n\t}\n\n\treturn [...stdio, 'ipc'];\n};\n","import os from 'os';\nimport onExit from 'signal-exit';\n\nconst DEFAULT_FORCE_KILL_TIMEOUT = 1000 * 5;\n\n// Monkey-patches `childProcess.kill()` to add `forceKillAfterTimeout` behavior\nexport const spawnedKill = (kill, signal = 'SIGTERM', options = {}) => {\n\tconst killResult = kill(signal);\n\tsetKillTimeout(kill, signal, options, killResult);\n\treturn killResult;\n};\n\nconst setKillTimeout = (kill, signal, options, killResult) => {\n\tif (!shouldForceKill(signal, options, killResult)) {\n\t\treturn;\n\t}\n\n\tconst timeout = getForceKillAfterTimeout(options);\n\tconst t = setTimeout(() => {\n\t\tkill('SIGKILL');\n\t}, timeout);\n\n\t// Guarded because there's no `.unref()` when `execa` is used in the renderer\n\t// process in Electron. This cannot be tested since we don't run tests in\n\t// Electron.\n\t// istanbul ignore else\n\tif (t.unref) {\n\t\tt.unref();\n\t}\n};\n\nconst shouldForceKill = (signal, {forceKillAfterTimeout}, killResult) => isSigterm(signal) && forceKillAfterTimeout !== false && killResult;\n\nconst isSigterm = signal => signal === os.constants.signals.SIGTERM\n\t\t|| (typeof signal === 'string' && signal.toUpperCase() === 'SIGTERM');\n\nconst getForceKillAfterTimeout = ({forceKillAfterTimeout = true}) => {\n\tif (forceKillAfterTimeout === true) {\n\t\treturn DEFAULT_FORCE_KILL_TIMEOUT;\n\t}\n\n\tif (!Number.isFinite(forceKillAfterTimeout) || forceKillAfterTimeout < 0) {\n\t\tthrow new TypeError(`Expected the \\`forceKillAfterTimeout\\` option to be a non-negative integer, got \\`${forceKillAfterTimeout}\\` (${typeof forceKillAfterTimeout})`);\n\t}\n\n\treturn forceKillAfterTimeout;\n};\n\n// `childProcess.cancel()`\nexport const spawnedCancel = (spawned, context) => {\n\tconst killResult = spawned.kill();\n\n\tif (killResult) {\n\t\tcontext.isCanceled = true;\n\t}\n};\n\nconst timeoutKill = (spawned, signal, reject) => {\n\tspawned.kill(signal);\n\treject(Object.assign(new Error('Timed out'), {timedOut: true, signal}));\n};\n\n// `timeout` option handling\nexport const setupTimeout = (spawned, {timeout, killSignal = 'SIGTERM'}, spawnedPromise) => {\n\tif (timeout === 0 || timeout === undefined) {\n\t\treturn spawnedPromise;\n\t}\n\n\tlet timeoutId;\n\tconst timeoutPromise = new Promise((resolve, reject) => {\n\t\ttimeoutId = setTimeout(() => {\n\t\t\ttimeoutKill(spawned, killSignal, reject);\n\t\t}, timeout);\n\t});\n\n\tconst safeSpawnedPromise = spawnedPromise.finally(() => {\n\t\tclearTimeout(timeoutId);\n\t});\n\n\treturn Promise.race([timeoutPromise, safeSpawnedPromise]);\n};\n\nexport const validateTimeout = ({timeout}) => {\n\tif (timeout !== undefined && (!Number.isFinite(timeout) || timeout < 0)) {\n\t\tthrow new TypeError(`Expected the \\`timeout\\` option to be a non-negative integer, got \\`${timeout}\\` (${typeof timeout})`);\n\t}\n};\n\n// `cleanup` option handling\nexport const setExitHandler = async (spawned, {cleanup, detached}, timedPromise) => {\n\tif (!cleanup || detached) {\n\t\treturn timedPromise;\n\t}\n\n\tconst removeExitHandler = onExit(() => {\n\t\tspawned.kill();\n\t});\n\n\treturn timedPromise.finally(() => {\n\t\tremoveExitHandler();\n\t});\n};\n","export function isStream(stream) {\n\treturn stream !== null\n\t\t&& typeof stream === 'object'\n\t\t&& typeof stream.pipe === 'function';\n}\n\nexport function isWritableStream(stream) {\n\treturn isStream(stream)\n\t\t&& stream.writable !== false\n\t\t&& typeof stream._write === 'function'\n\t\t&& typeof stream._writableState === 'object';\n}\n\nexport function isReadableStream(stream) {\n\treturn isStream(stream)\n\t\t&& stream.readable !== false\n\t\t&& typeof stream._read === 'function'\n\t\t&& typeof stream._readableState === 'object';\n}\n\nexport function isDuplexStream(stream) {\n\treturn isWritableStream(stream)\n\t\t&& isReadableStream(stream);\n}\n\nexport function isTransformStream(stream) {\n\treturn isDuplexStream(stream)\n\t\t&& typeof stream._transform === 'function';\n}\n","import {isStream} from 'is-stream';\nimport getStream from 'get-stream';\nimport mergeStream from 'merge-stream';\n\n// `input` option\nexport const handleInput = (spawned, input) => {\n\t// Checking for stdin is workaround for https://github.com/nodejs/node/issues/26852\n\t// @todo remove `|| spawned.stdin === undefined` once we drop support for Node.js <=12.2.0\n\tif (input === undefined || spawned.stdin === undefined) {\n\t\treturn;\n\t}\n\n\tif (isStream(input)) {\n\t\tinput.pipe(spawned.stdin);\n\t} else {\n\t\tspawned.stdin.end(input);\n\t}\n};\n\n// `all` interleaves `stdout` and `stderr`\nexport const makeAllStream = (spawned, {all}) => {\n\tif (!all || (!spawned.stdout && !spawned.stderr)) {\n\t\treturn;\n\t}\n\n\tconst mixed = mergeStream();\n\n\tif (spawned.stdout) {\n\t\tmixed.add(spawned.stdout);\n\t}\n\n\tif (spawned.stderr) {\n\t\tmixed.add(spawned.stderr);\n\t}\n\n\treturn mixed;\n};\n\n// On failure, `result.stdout|stderr|all` should contain the currently buffered stream\nconst getBufferedData = async (stream, streamPromise) => {\n\tif (!stream) {\n\t\treturn;\n\t}\n\n\tstream.destroy();\n\n\ttry {\n\t\treturn await streamPromise;\n\t} catch (error) {\n\t\treturn error.bufferedData;\n\t}\n};\n\nconst getStreamPromise = (stream, {encoding, buffer, maxBuffer}) => {\n\tif (!stream || !buffer) {\n\t\treturn;\n\t}\n\n\tif (encoding) {\n\t\treturn getStream(stream, {encoding, maxBuffer});\n\t}\n\n\treturn getStream.buffer(stream, {maxBuffer});\n};\n\n// Retrieve result of child process: exit code, signal, error, streams (stdout/stderr/all)\nexport const getSpawnedResult = async ({stdout, stderr, all}, {encoding, buffer, maxBuffer}, processDone) => {\n\tconst stdoutPromise = getStreamPromise(stdout, {encoding, buffer, maxBuffer});\n\tconst stderrPromise = getStreamPromise(stderr, {encoding, buffer, maxBuffer});\n\tconst allPromise = getStreamPromise(all, {encoding, buffer, maxBuffer: maxBuffer * 2});\n\n\ttry {\n\t\treturn await Promise.all([processDone, stdoutPromise, stderrPromise, allPromise]);\n\t} catch (error) {\n\t\treturn Promise.all([\n\t\t\t{error, signal: error.signal, timedOut: error.timedOut},\n\t\t\tgetBufferedData(stdout, stdoutPromise),\n\t\t\tgetBufferedData(stderr, stderrPromise),\n\t\t\tgetBufferedData(all, allPromise),\n\t\t]);\n\t}\n};\n\nexport const validateInputSync = ({input}) => {\n\tif (isStream(input)) {\n\t\tthrow new TypeError('The `input` option cannot be a stream in sync mode');\n\t}\n};\n","const nativePromisePrototype = (async () => {})().constructor.prototype;\nconst descriptors = ['then', 'catch', 'finally'].map(property => [\n\tproperty,\n\tReflect.getOwnPropertyDescriptor(nativePromisePrototype, property),\n]);\n\n// The return value is a mixin of `childProcess` and `Promise`\nexport const mergePromise = (spawned, promise) => {\n\tfor (const [property, descriptor] of descriptors) {\n\t\t// Starting the main `promise` is deferred to avoid consuming streams\n\t\tconst value = typeof promise === 'function'\n\t\t\t? (...args) => Reflect.apply(descriptor.value, promise(), args)\n\t\t\t: descriptor.value.bind(promise);\n\n\t\tReflect.defineProperty(spawned, property, {...descriptor, value});\n\t}\n\n\treturn spawned;\n};\n\n// Use promises instead of `child_process` events\nexport const getSpawnedPromise = spawned => new Promise((resolve, reject) => {\n\tspawned.on('exit', (exitCode, signal) => {\n\t\tresolve({exitCode, signal});\n\t});\n\n\tspawned.on('error', error => {\n\t\treject(error);\n\t});\n\n\tif (spawned.stdin) {\n\t\tspawned.stdin.on('error', error => {\n\t\t\treject(error);\n\t\t});\n\t}\n});\n","const normalizeArgs = (file, args = []) => {\n\tif (!Array.isArray(args)) {\n\t\treturn [file];\n\t}\n\n\treturn [file, ...args];\n};\n\nconst NO_ESCAPE_REGEXP = /^[\\w.-]+$/;\nconst DOUBLE_QUOTES_REGEXP = /\"/g;\n\nconst escapeArg = arg => {\n\tif (typeof arg !== 'string' || NO_ESCAPE_REGEXP.test(arg)) {\n\t\treturn arg;\n\t}\n\n\treturn `\"${arg.replace(DOUBLE_QUOTES_REGEXP, '\\\\\"')}\"`;\n};\n\nexport const joinCommand = (file, args) => normalizeArgs(file, args).join(' ');\n\nexport const getEscapedCommand = (file, args) => normalizeArgs(file, args).map(arg => escapeArg(arg)).join(' ');\n\nconst SPACES_REGEXP = / +/g;\n\n// Handle `execaCommand()`\nexport const parseCommand = command => {\n\tconst tokens = [];\n\tfor (const token of command.trim().split(SPACES_REGEXP)) {\n\t\t// Allow spaces to be escaped by a backslash if not meant as a delimiter\n\t\tconst previousToken = tokens[tokens.length - 1];\n\t\tif (previousToken && previousToken.endsWith('\\\\')) {\n\t\t\t// Merge previous token with current one\n\t\t\ttokens[tokens.length - 1] = `${previousToken.slice(0, -1)} ${token}`;\n\t\t} else {\n\t\t\ttokens.push(token);\n\t\t}\n\t}\n\n\treturn tokens;\n};\n","import path from 'path';\nimport childProcess from 'child_process';\nimport process from 'process';\nimport crossSpawn from 'cross-spawn';\nimport stripFinalNewline from 'strip-final-newline';\nimport {npmRunPathEnv} from 'npm-run-path';\nimport onetime from 'onetime';\nimport {makeError} from './lib/error.js';\nimport {normalizeStdio, normalizeStdioNode} from './lib/stdio.js';\nimport {spawnedKill, spawnedCancel, setupTimeout, validateTimeout, setExitHandler} from './lib/kill.js';\nimport {handleInput, getSpawnedResult, makeAllStream, validateInputSync} from './lib/stream.js';\nimport {mergePromise, getSpawnedPromise} from './lib/promise.js';\nimport {joinCommand, parseCommand, getEscapedCommand} from './lib/command.js';\n\nconst DEFAULT_MAX_BUFFER = 1000 * 1000 * 100;\n\nconst getEnv = ({env: envOption, extendEnv, preferLocal, localDir, execPath}) => {\n\tconst env = extendEnv ? {...process.env, ...envOption} : envOption;\n\n\tif (preferLocal) {\n\t\treturn npmRunPathEnv({env, cwd: localDir, execPath});\n\t}\n\n\treturn env;\n};\n\nconst handleArguments = (file, args, options = {}) => {\n\tconst parsed = crossSpawn._parse(file, args, options);\n\tfile = parsed.command;\n\targs = parsed.args;\n\toptions = parsed.options;\n\n\toptions = {\n\t\tmaxBuffer: DEFAULT_MAX_BUFFER,\n\t\tbuffer: true,\n\t\tstripFinalNewline: true,\n\t\textendEnv: true,\n\t\tpreferLocal: false,\n\t\tlocalDir: options.cwd || process.cwd(),\n\t\texecPath: process.execPath,\n\t\tencoding: 'utf8',\n\t\treject: true,\n\t\tcleanup: true,\n\t\tall: false,\n\t\twindowsHide: true,\n\t\t...options,\n\t};\n\n\toptions.env = getEnv(options);\n\n\toptions.stdio = normalizeStdio(options);\n\n\tif (process.platform === 'win32' && path.basename(file, '.exe') === 'cmd') {\n\t\t// #116\n\t\targs.unshift('/q');\n\t}\n\n\treturn {file, args, options, parsed};\n};\n\nconst handleOutput = (options, value, error) => {\n\tif (typeof value !== 'string' && !Buffer.isBuffer(value)) {\n\t\t// When `execaSync()` errors, we normalize it to '' to mimic `execa()`\n\t\treturn error === undefined ? undefined : '';\n\t}\n\n\tif (options.stripFinalNewline) {\n\t\treturn stripFinalNewline(value);\n\t}\n\n\treturn value;\n};\n\nexport function execa(file, args, options) {\n\tconst parsed = handleArguments(file, args, options);\n\tconst command = joinCommand(file, args);\n\tconst escapedCommand = getEscapedCommand(file, args);\n\n\tvalidateTimeout(parsed.options);\n\n\tlet spawned;\n\ttry {\n\t\tspawned = childProcess.spawn(parsed.file, parsed.args, parsed.options);\n\t} catch (error) {\n\t\t// Ensure the returned error is always both a promise and a child process\n\t\tconst dummySpawned = new childProcess.ChildProcess();\n\t\tconst errorPromise = Promise.reject(makeError({\n\t\t\terror,\n\t\t\tstdout: '',\n\t\t\tstderr: '',\n\t\t\tall: '',\n\t\t\tcommand,\n\t\t\tescapedCommand,\n\t\t\tparsed,\n\t\t\ttimedOut: false,\n\t\t\tisCanceled: false,\n\t\t\tkilled: false,\n\t\t}));\n\t\treturn mergePromise(dummySpawned, errorPromise);\n\t}\n\n\tconst spawnedPromise = getSpawnedPromise(spawned);\n\tconst timedPromise = setupTimeout(spawned, parsed.options, spawnedPromise);\n\tconst processDone = setExitHandler(spawned, parsed.options, timedPromise);\n\n\tconst context = {isCanceled: false};\n\n\tspawned.kill = spawnedKill.bind(null, spawned.kill.bind(spawned));\n\tspawned.cancel = spawnedCancel.bind(null, spawned, context);\n\n\tconst handlePromise = async () => {\n\t\tconst [{error, exitCode, signal, timedOut}, stdoutResult, stderrResult, allResult] = await getSpawnedResult(spawned, parsed.options, processDone);\n\t\tconst stdout = handleOutput(parsed.options, stdoutResult);\n\t\tconst stderr = handleOutput(parsed.options, stderrResult);\n\t\tconst all = handleOutput(parsed.options, allResult);\n\n\t\tif (error || exitCode !== 0 || signal !== null) {\n\t\t\tconst returnedError = makeError({\n\t\t\t\terror,\n\t\t\t\texitCode,\n\t\t\t\tsignal,\n\t\t\t\tstdout,\n\t\t\t\tstderr,\n\t\t\t\tall,\n\t\t\t\tcommand,\n\t\t\t\tescapedCommand,\n\t\t\t\tparsed,\n\t\t\t\ttimedOut,\n\t\t\t\tisCanceled: context.isCanceled,\n\t\t\t\tkilled: spawned.killed,\n\t\t\t});\n\n\t\t\tif (!parsed.options.reject) {\n\t\t\t\treturn returnedError;\n\t\t\t}\n\n\t\t\tthrow returnedError;\n\t\t}\n\n\t\treturn {\n\t\t\tcommand,\n\t\t\tescapedCommand,\n\t\t\texitCode: 0,\n\t\t\tstdout,\n\t\t\tstderr,\n\t\t\tall,\n\t\t\tfailed: false,\n\t\t\ttimedOut: false,\n\t\t\tisCanceled: false,\n\t\t\tkilled: false,\n\t\t};\n\t};\n\n\tconst handlePromiseOnce = onetime(handlePromise);\n\n\thandleInput(spawned, parsed.options.input);\n\n\tspawned.all = makeAllStream(spawned, parsed.options);\n\n\treturn mergePromise(spawned, handlePromiseOnce);\n}\n\nexport function execaSync(file, args, options) {\n\tconst parsed = handleArguments(file, args, options);\n\tconst command = joinCommand(file, args);\n\tconst escapedCommand = getEscapedCommand(file, args);\n\n\tvalidateInputSync(parsed.options);\n\n\tlet result;\n\ttry {\n\t\tresult = childProcess.spawnSync(parsed.file, parsed.args, parsed.options);\n\t} catch (error) {\n\t\tthrow makeError({\n\t\t\terror,\n\t\t\tstdout: '',\n\t\t\tstderr: '',\n\t\t\tall: '',\n\t\t\tcommand,\n\t\t\tescapedCommand,\n\t\t\tparsed,\n\t\t\ttimedOut: false,\n\t\t\tisCanceled: false,\n\t\t\tkilled: false,\n\t\t});\n\t}\n\n\tconst stdout = handleOutput(parsed.options, result.stdout, result.error);\n\tconst stderr = handleOutput(parsed.options, result.stderr, result.error);\n\n\tif (result.error || result.status !== 0 || result.signal !== null) {\n\t\tconst error = makeError({\n\t\t\tstdout,\n\t\t\tstderr,\n\t\t\terror: result.error,\n\t\t\tsignal: result.signal,\n\t\t\texitCode: result.status,\n\t\t\tcommand,\n\t\t\tescapedCommand,\n\t\t\tparsed,\n\t\t\ttimedOut: result.error && result.error.code === 'ETIMEDOUT',\n\t\t\tisCanceled: false,\n\t\t\tkilled: result.signal !== null,\n\t\t});\n\n\t\tif (!parsed.options.reject) {\n\t\t\treturn error;\n\t\t}\n\n\t\tthrow error;\n\t}\n\n\treturn {\n\t\tcommand,\n\t\tescapedCommand,\n\t\texitCode: 0,\n\t\tstdout,\n\t\tstderr,\n\t\tfailed: false,\n\t\ttimedOut: false,\n\t\tisCanceled: false,\n\t\tkilled: false,\n\t};\n}\n\nexport function execaCommand(command, options) {\n\tconst [file, ...args] = parseCommand(command);\n\treturn execa(file, args, options);\n}\n\nexport function execaCommandSync(command, options) {\n\tconst [file, ...args] = parseCommand(command);\n\treturn execaSync(file, args, options);\n}\n\nexport function execaNode(scriptPath, args, options = {}) {\n\tif (args && !Array.isArray(args) && typeof args === 'object') {\n\t\toptions = args;\n\t\targs = [];\n\t}\n\n\tconst stdio = normalizeStdioNode(options);\n\tconst defaultExecArgv = process.execArgv.filter(arg => !arg.startsWith('--inspect'));\n\n\tconst {\n\t\tnodePath = process.execPath,\n\t\tnodeOptions = defaultExecArgv,\n\t} = options;\n\n\treturn execa(\n\t\tnodePath,\n\t\t[\n\t\t\t...nodeOptions,\n\t\t\tscriptPath,\n\t\t\t...(Array.isArray(args) ? args : []),\n\t\t],\n\t\t{\n\t\t\t...options,\n\t\t\tstdin: undefined,\n\t\t\tstdout: undefined,\n\t\t\tstderr: undefined,\n\t\t\tstdio,\n\t\t\tshell: false,\n\t\t},\n\t);\n}\n","import process from 'node:process';\nimport path from 'node:path';\nimport pathKey from 'path-key';\n\nexport function npmRunPath(options = {}) {\n\tconst {\n\t\tcwd = process.cwd(),\n\t\tpath: path_ = process.env[pathKey()],\n\t\texecPath = process.execPath,\n\t} = options;\n\n\tlet previous;\n\tlet cwdPath = path.resolve(cwd);\n\tconst result = [];\n\n\twhile (previous !== cwdPath) {\n\t\tresult.push(path.join(cwdPath, 'node_modules/.bin'));\n\t\tprevious = cwdPath;\n\t\tcwdPath = path.resolve(cwdPath, '..');\n\t}\n\n\t// Ensure the running `node` binary is used.\n\tresult.push(path.resolve(cwd, execPath, '..'));\n\n\treturn [...result, path_].join(path.delimiter);\n}\n\nexport function npmRunPathEnv({env = process.env, ...options} = {}) {\n\tenv = {...env};\n\n\tconst path = pathKey({env});\n\toptions.path = env[path];\n\tenv[path] = npmRunPath(options);\n\n\treturn env;\n}\n","export default function stripFinalNewline(input) {\n\tconst LF = typeof input === 'string' ? '\\n' : '\\n'.charCodeAt();\n\tconst CR = typeof input === 'string' ? '\\r' : '\\r'.charCodeAt();\n\n\tif (input[input.length - 1] === LF) {\n\t\tinput = input.slice(0, -1);\n\t}\n\n\tif (input[input.length - 1] === CR) {\n\t\tinput = input.slice(0, -1);\n\t}\n\n\treturn input;\n}\n"],"names":["cp","parse","enoent","spawn","command","args","options","parsed","spawned","hookChildProcess","module","exports","sync","result","spawnSync","error","verifyENOENTSync","status","_parse","_enoent","isWin","process","platform","notFoundError","original","syscall","Object","assign","Error","code","errno","path","spawnargs","verifyENOENT","file","originalEmit","emit","name","arg1","err","call","apply","arguments","resolveCommand","escape","readShebang","isExecutableRegExp","isCmdShimRegExp","Array","isArray","slice","undefined","shell","commandFile","shebang","unshift","detectShebang","needsShell","test","forceShell","needsDoubleEscapeMetaChars","normalize","map","arg","argument","shellCommand","concat","join","env","comspec","windowsVerbatimArguments","parseNonShell","metaCharsRegExp","replace","doubleEscapeMetaChars","fs","shebangCommand","buffer","Buffer","alloc","fd","openSync","readSync","closeSync","e","toString","which","getPathKey","resolveCommandAttempt","withoutPathExt","cwd","hasCustomCwd","shouldSwitchCwd","chdir","disabled","resolved","pathExt","delimiter","resolve","PassThrough","PassThroughStream","array","encoding","isBuffer","objectMode","stream","setEncoding","length","chunks","on","chunk","push","getBufferedValue","getBufferedLength","constants","BufferConstants","promisify","bufferStream","streamPipelinePromisified","pipeline","MaxBufferError","constructor","super","this","async","getStream","inputStream","maxBuffer","Infinity","Promise","reject","rejectPromise","MAX_LENGTH","bufferedData","core","isexe","cb","TypeError","er","is","ignoreErrors","global","TESTING_WINDOWS","checkStat","statSync","stat","isFile","mod","mode","uid","gid","myUid","getuid","myGid","getgid","u","parseInt","g","checkMode","isSymbolicLink","pathext","PATHEXT","split","indexOf","i","p","toLowerCase","substr","checkPathExt","sources","output","setMaxListeners","add","isEmpty","remove","prototype","forEach","source","once","bind","pipe","end","filter","it","readable","pathKey","environment","keys","reverse","find","key","toUpperCase","shebangRegex","string","match","binary","pop","processOk","removeListener","reallyExit","listeners","kill","pid","emitter","assert","signals","EE","EventEmitter","__signal_exit_emitter__","count","emitted","infinite","opts","equal","loaded","load","ev","alwaysLast","unload","sig","sigListeners","originalProcessEmit","originalProcessReallyExit","event","signal","processEmit","processReallyExit","exitCode","ret","isWindows","OSTYPE","COLON","getNotFoundError","cmd","getPathInfo","opt","colon","pathEnv","PATH","pathExtExe","found","step","all","ppRaw","pathPart","pCmd","subStep","ii","ext","then","res","j","cur","ex","nothrow","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","obj","prop","hasOwnProperty","r","Symbol","toStringTag","value","copyProperty","to","from","property","ignoreNonConfigurable","toDescriptor","getOwnPropertyDescriptor","fromDescriptor","canCopyProperty","configurable","writable","wrappedToString","withName","fromBody","toStringDescriptor","Function","toStringName","calledFunctions","WeakMap","onetime","function_","returnValue","callCount","functionName","displayName","arguments_","set","throw","Reflect","ownKeys","fromPrototype","getPrototypeOf","setPrototypeOf","changePrototype","trim","newToString","changeToString","mimicFunction","has","getRealtimeSignal","index","number","SIGRTMIN","action","description","standard","SIGNALS","forced","getSignals","realtimeSignals","getRealtimeSignals","normalizeSignal","defaultNumber","constantSignal","supported","signalsByName","reduce","signalByNameMemo","findSignalByNumber","signalA","makeError","signalsA","SIGRTMAX","getSignalByNumber","getSignalsByNumber","stdout","stderr","escapedCommand","timedOut","isCanceled","killed","timeout","signalDescription","prefix","errorCode","getErrorPrefix","execaMessage","isError","shortMessage","message","Boolean","originalMessage","failed","aliases","normalizeStdio","stdio","alias","some","hasAlias","Math","max","spawnedKill","killResult","setKillTimeout","shouldForceKill","getForceKillAfterTimeout","t","setTimeout","unref","forceKillAfterTimeout","isSigterm","Number","isFinite","spawnedCancel","context","isStream","getBufferedData","streamPromise","destroy","getStreamPromise","nativePromisePrototype","descriptors","mergePromise","promise","descriptor","normalizeArgs","NO_ESCAPE_REGEXP","DOUBLE_QUOTES_REGEXP","joinCommand","getEscapedCommand","escapeArg","SPACES_REGEXP","parseCommand","tokens","token","previousToken","endsWith","handleArguments","stripFinalNewline","extendEnv","preferLocal","localDir","execPath","cleanup","windowsHide","envOption","path_","previous","cwdPath","npmRunPath","npmRunPathEnv","getEnv","handleOutput","input","LF","charCodeAt","CR","execa","validateTimeout","dummySpawned","errorPromise","spawnedPromise","stdin","getSpawnedPromise","timedPromise","killSignal","timeoutId","timeoutPromise","timeoutKill","safeSpawnedPromise","finally","clearTimeout","race","setupTimeout","processDone","detached","removeExitHandler","setExitHandler","cancel","handlePromiseOnce","stdoutResult","stderrResult","allResult","stdoutPromise","stderrPromise","allPromise","getSpawnedResult","returnedError","handleInput","mixed","makeAllStream","execaSync","validateInputSync","execaCommand","execaCommandSync","execaNode","scriptPath","includes","normalizeStdioNode","defaultExecArgv","startsWith","nodePath","nodeOptions"],"sourceRoot":""}